import tkinter as tk

global task_listBox
def add_task():
    task = task_entry.get() # [–∑–¥–µ—Å—å –º—ã –ø–æ–ª—É—á–∞–µ–º —Å–ª–æ–≤–∞ –∏–∑ –ø–æ–ª—è –¥–ª—è –≤–≤–æ–¥–∞]
    if task:
        task_listBox.insert(tk.END, task) #[–∑–¥–µ—Å—å —Å –ø–æ–º–æ—â—å—é –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã END —Å—Ç–∞–≤–ª—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞]
        task_entry.delete(0, tk.END) #[–∑–¥–µ—Å—å –æ—á–∏—â–∞–µ–º –ø–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞, –æ—Ç –Ω—É–ª–µ–≤–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ –∏ –¥–æ –∫–æ–Ω—Ü–∞]



def delete_task():
    selected_task = task_listBox.curselection() # [—Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ curselection —ç–ª–µ–º–µ–Ω—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –º—ã –Ω–∞–∂–º—ë–º,
    # –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —Å–≤–æ–π ID, –∏–Ω–¥–µ–∫—Å, –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é selected_task]
    if selected_task:
        task_listBox.delete(selected_task) # [—É–¥–∞–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞]

# –î–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤–∏–¥–∂–µ—Ç–∞ —Å–ø–∏—Å–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Ñ–∞–π–ª —Å–ª—É–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞ Python,
# –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏ –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞.
# def mark_task():
#     selected_task = task_listBox.curselection()
#     if selected_task:
#         task_listBox.itemconfig(selected_task, bg="chartreuse2") # [—Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ itemconfig –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–∞—è
#         # –∑–∞–¥–∞—á–∞ –∏–∑–º–µ–Ω–∏—Ç —Ü–≤–µ—Ç –∑–∞–ª–∏–≤–∫–∏]
def mark_task():
    selected_task = task_listBox.curselection()
    if selected_task:
        task_index = selected_task[0]
        task_text = task_listBox.get(task_index)
        if '(–≤—ã–ø.)' in task_text:
            return 0
        else:
            task_listBox.insert(task_index, f'{task_text} (–≤—ã–ø.)')  # –¥–æ–±–∞–≤–ª—è–µ–º —Å–ª–æ–≤–æ "–≤—ã–ø."
            task_listBox.itemconfig(selected_task, bg="chartreuse2")  # –∏–∑–º–µ–Ω—è–µ–º —Ñ–æ–Ω –Ω–∞ —Å–≤–µ—Ç–ª–æ-–∑–µ–ª–µ–Ω—ã–π
            task_listBox.delete(task_index+1)  # —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —ç–ª–µ–º–µ–Ω—Ç

def save_task():
    save_task = task_listBox.curselection()
    if selected_task:
        task_listBox.itemconfig(selected_task, bg="slate blue") #


# –î–ª—è –∏–º–ø–æ—Ä—Ç–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞ "Tasks.txt" –≤ –≤–∏–¥–∂–µ—Ç —Å–ø–∏—Å–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤, —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Å –ø–æ–º–æ—â—å—é –º–æ–¥—É–ª—è tkinter,
# –Ω—É–∂–Ω–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª, –∏–∑–≤–ª–µ—á—å —ç–ª–µ–º–µ–Ω—Ç—ã –∏ –¥–æ–±–∞–≤–∏—Ç—å –∏—Ö –≤ –≤–∏–¥–∂–µ—Ç —Å–ø–∏—Å–∫–∞
def export_to_file():
    try:
        if task_listBox.size():
            with open("Tasks.txt", 'w', encoding="utf-8") as file:
                for i in range(task_listBox.size()):
                    file.write(task_listBox.get(i) + '\n')

        # with open("Tasks.txt", 'w', encoding="utf-8") as file:
        #     for element in task_listBox:
        #         file.write(str(element) + '\n')
            print(f'–≠–ª–µ–º–µ–Ω—Ç—ã —É—Å–ø–µ—à–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ —Ñ–∞–π–ª "Tasks.txt"')
        else:
            print(f'–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç–æ–π - –Ω–µ—á–µ–≥–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ —Ñ–∞–π–ª "Tasks.txt"')
    except Exception as e:
        print(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {e}')

def import_from_file():
    try:
        if task_listBox.size():
            return 0
        else:
            with open('Tasks.txt', 'r', encoding="utf-8") as file:
                tasks = file.readlines()
                for task in tasks:
                    task = task.strip()
                    if '(–≤—ã–ø.)' in task:
                        task_listBox.insert(tk.END, task)
                        task_listBox.itemconfig(tk.END, bg="chartreuse2")
                    else:
                        task_listBox.insert(tk.END, task)
            print(f'–≠–ª–µ–º–µ–Ω—Ç—ã —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –∏–∑ —Ñ–∞–π–ª–∞ "Tasks.txt"')
    except Exception as e:
        print(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞: {e}')

    except FileNotFoundError:
        print("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")


root = tk.Tk()
root.title("Task list")
# 5. –ú–µ–Ω—è–µ–º —Ü–≤–µ—Ç –∑–∞–¥–Ω–µ–≥–æ —Ñ–æ–Ω–∞:
root.configure(background="HotPink")
# background ‚Äî —ç—Ç–æ –∞—Ç—Ä–∏–±—É—Ç, –∞—Ä–≥—É–º–µ–Ω—Ç —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–π –º—ã –º–æ–∂–µ–º –º–µ–Ω—è—Ç—å.
# –ù–∞–∑–≤–∞–Ω–∏–µ —Ü–≤–µ—Ç–∞, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, –º—ã –Ω–∞—Ö–æ–¥–∏–º –Ω–∞ —Å–∞–π—Ç–µ https://letpy.com/handbook/tkinter-colors/
# 6. –°–æ–∑–¥–∞—ë–º –∏ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –Ω–∞–¥–ø–∏—Å—å, —á—Ç–æ–±—ã —É –ø–æ–ª—è –¥–ª—è –≤–≤–æ–¥–∞ –∑–∞–¥–∞—á–∏ –±—ã–ª –∑–∞–≥–æ–ª–æ–≤–æ–∫:
text1 = tk.Label(root, text="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –∑–∞–¥–∞—á—É:", bg="HotPink", font = ("Comic Sans MS", 11, "bold"))
text1.pack(pady=5)

# 7. –ß—Ç–æ–±—ã –¥–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∏—Ç—å –∑–∞–¥–∞—á–∏, —Å–æ–∑–¥–∞—ë–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é:
task_entry = tk.Entry(root, width=100, bg="LightPink1")

# üß†–ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ü–≤–µ—Ç –≤–≤–æ–¥–∏–º–æ–≥–æ —Ç–µ–∫—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º:
# fg = ‚Äú–Ω–∞–∑–≤–∞–Ω–∏–µ_—Ü–≤–µ—Ç–∞‚Äù;
# font = ‚Äú–Ω–∞–∑–≤–∞–Ω–∏–µ_—à—Ä–∏—Ñ—Ç–∞‚Äù (–Ω–µ—Å–∏–ª—å–Ω–æ —Ä–∞–∑–ª–∏—á–∞—é—Ç—Å—è, –º–æ–∂–Ω–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–µ–∑ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö).

# 8. –ß—Ç–æ–±—ã –≤—ã–≤–æ–¥–∏—Ç—å –¥–∞–Ω–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –Ω–∞ —ç–∫—Ä–∞–Ω–µ, –ø—Ä–æ–ø–∏—Å—ã–≤–∞–µ–º:

task_entry.pack(pady=10)

# üß†pady ‚Äî –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤–≤–µ—Ä—Ö-–≤–Ω–∏–∑, –ø–∞–¥–¥–∏–Ω–≥ —Å–≤–µ—Ä—Ö—É –∏ —Å–Ω–∏–∑—É;
# padx ‚Äî –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤–ª–µ–≤–æ-–≤–ø—Ä–∞–≤–æ, –ø–∞–¥–¥–∏–Ω–≥ —Å–ª–µ–≤–∞ –∏ —Å–ø—Ä–∞–≤–∞.

# 9. –°–æ–∑–¥–∞—ë–º –∏ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –∑–∞–¥–∞—á—É –≤ —Å–ø–∏—Å–æ–∫:

add_task_button = tk.Button(root, text="–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É", command=add_task, font = (("Times New Roman"), 11, "bold"), width=35)
add_task_button.pack(pady=5)

# 10. –°–æ–∑–¥–∞—ë–º –∏ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —É–¥–∞–ª—è—Ç—å –∑–∞–¥–∞—á—É –∏–∑ —Å–ø–∏—Å–∫–∞:

delete_button = tk.Button(root, text="–£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É", command=delete_task, font = (("Times New Roman"), 11, "bold"), width=35)
delete_button.pack(pady=5)

# 11. –°–æ–∑–¥–∞—ë–º –∏ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –æ—Ç–º–µ—á–∞—Ç—å –∑–∞–¥–∞—á—É –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π:

mark_button = tk.Button(root, text="–û—Ç–º–µ—Ç–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é –∑–∞–¥–∞—á—É", command=mark_task, font = (("Times New Roman"), 11, "bold"), width=35)
mark_button.pack(pady=5)


save_button = tk.Button(root, text="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –≤ —Ñ–∞–π–ª–µ 'Tasks.txt'", command=export_to_file, font = (("Times New Roman"), 11, "bold"), width=35)
save_button.pack(pady=5)

rest_button = tk.Button(root, text="–ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –∏–∑ —Ñ–∞–π–ª–∞ 'Tasks.txt'", command=import_from_file, font = (("Times New Roman"), 11, "bold"), width=35)
rest_button.pack(pady=5)


# 12. –î–æ–±–∞–≤–ª—è–µ–º –∏ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –Ω–∞–¥–ø–∏—Å—å, —á—Ç–æ–±—ã —É —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á –±—ã–ª –∑–∞–≥–æ–ª–æ–≤–æ–∫:

text2 = tk.Label(root, text="–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á:", bg="HotPink", font = ("Comic Sans MS", 11, "bold"))
text2.pack(pady=5)

# üß†–§—É–Ω–∫—Ü–∏—è bg –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–¥–µ–ª–∞—Ç—å –∑–∞–¥–Ω—é—é –∑–∞–ª–∏–≤–∫—É —Ç–µ–∫—Å—Ç–∞.

# 13. –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —Å–ø–∏—Å–æ–∫, –≤ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è –∑–∞–¥–∞—á–∏:
task_listBox = tk.Listbox(root, height=20, width=80, bg="LightPink1", font = ("Comic Sans MS", 11))

# 14. –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –Ω–∞ —ç–∫—Ä–∞–Ω–µ:
task_listBox.pack(pady=10, padx=10)

# 15. –ß—Ç–æ–±—ã –æ–∫–Ω–æ –Ω–µ –∑–∞–∫—Ä—ã–≤–∞–ª–æ—Å—å, –ø—Ä–æ–ø–∏—Å—ã–≤–∞–µ–º:
root.mainloop()